<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>yao: ytk control</title>
<script type="text/javascript" src="scripts.js">void=null;</script>
<link rel="stylesheet" href="styles.css" type="text/css">
</head>
<body>


<div id="content">

<h1>yao</h1>

<div id="links">
<p><b>Links</b></p>
<a href="aosimul.html">Main page</a><br>
<a href="installation.html">Installation</a><br>
<a href="examples.html">Examples and Scripts</a><br>
<a href="performance.html">Performance</a><br>
<a href="data-structures.html">Data structures and parfiles</a><br>
<a href="feature-control.html">Controlling Features</a><br>
<a href="screenshots.html">Screenshots</a><br>
<a href="algorithms.html">Algorithms</a><br>
<a href="ytkcontrol.html">Yao tk dynamic control</a><br>
<a href="weblog.html">News/Weblog</a><br>
</div>


<h2>YAO dynamic control using ytk</h2>

This page describes how to install and use the ytk-based interface to control yao while the loop is running. This tool is separate from the main yao package and is <font class="highlight">optional</font>. His intent is to provide a toy interface to play dynamically with the parameters and see immediately the effect of the change, without having to restart the whole simulation. It can be used to probe first order sensitivity to some parameters or simply as an educational tool for AO newbies.

<p>This page covers installation and operation.

<h3>Installation</h3>

ytk is included in the YAO release. The base directory where you unpack yao should include the <code>yao</code> and the  <code>ytk-1.0</code> directory.
<pre>
cd ytk-1.0/src
make clean
make ytk
</pre>
will produce a ytk executable in this directory. You can test it by typing <code>./ytk</code>
<p>It is convenient again to create a softlink somewhere in your path, e.g. 
<pre>
cd ~/bin
ln -s ~/yorick-1.5/contrib/ytk-1.0/src/ytk ./ytk
</pre>


<h4>Installing tcltk</h4>
YTK is tk based, so you need a tcltk installation of some kind. On OsX, you have the choice between a Aqua tcltk distribution (e.g. <a href="http://www.maths.mq.edu.au/~steffen/tcltk/TclTkAqua/">here</a>) and a X-based distribution (e.g. from <a href="http:/fink.sourceforge.net">fink</a>). Follow the instructions provided with these distributions. Personally, I use the X-based fink distribution.


<h3>How to run yao-tk</h3>

This is still in alpha stage. I am trying to come up with a simpler and safer way to start the control tk screens, but for now you'll have to do the following: In the working directory, start ytk:
<pre>
ytk
> #include "yao/yaotk.i"
> yaoCtrl,parfile
</pre>
where <code>parfile</code> is the name of the file for which a simulation is running of about to start (e.g. <code>"sh6m2.par"</code>). This will pop up the main yaotk control screen:

<br><br>
<center><img src="yaotk-main.png"></center>
<p>
From this screen (and the additional ones, see below), you can control the main yao simulation while it is running. The actions are basically self-explanatory, so I won't detail everyone of them: 
<ul>
<li>"Step" has aoloop step one iteration when in "Pause" mode
<li>"Restart" ?
<li>"Im/Imav" in Displays switches the displayed image between the instantaneous and the averaged -i.e. since the beginning of the aoloop run- image(s).
<li>"Gain" is the main loop gain, loop.gain
<li>"Disp. Speed" sets the display rate to one image displayed every so many iterations
<li>"Im.Lambda" resets the image wavelength to this value
<li>"WFSs & DMs" each bring another screen in which WFS and DM parameters can be fiddled with.
</ul>

The WFS and DM screens look like:
<br><br>
<center>
<img src="yaotk-wfs.png">
<img src="yaotk-dm.png">
</center>
<p>

Most of the sliders in these windows do not require an explanation. What does is the little radio button in the left column: These allow you to select on which WFSs/DMs you want to apply what you are about to do. For instance if you want to vary the altitude of the LGS for wfs#1 (and only #1) in this system, you would click on the wfs1 radio button and then move the GS Altitude slider. You can of course select multiple radio button, which can be useful when you simulate MCAO or GLAO systems, for instance, where several sensors share the same characteristics. <i>If you do not select any sensor/DM, modifying parameters in the right hand side will not have any effect.</i>

<p>Note that yaotk does not know the status of the parameters in yao/aoloop. yaotk passes update commands to yao through a pipe, but there is no return/acknowledgement/handshaking. Yaotk only knows about the status of the system yoa is running through the parfile you entered as a parameter when you started yaotk. A consequence is that if you have modified parameters on the yao command line before starting aoloop, this will not be known by yaotk. In other words, you can <i>set</i> aoloop parameters with yaotk, but you can not <i>probe</i> aoloop parameters with any insurance (they will be what they were in the parfile or what you just set them).

<p>Have fun & Enjoy.
</div>
Page updated on UT $Date: 2007-12-12 23:29:38 $
<p>
 <a href="http://jigsaw.w3.org/css-validator/">
  <img style="border:0;width:88px;height:31px"
       src="http://jigsaw.w3.org/css-validator/images/vcss" 
       alt="Valid CSS!">
 </a>
</p>
</body>
</html>
