v 4.6.1:
- fixed dpi when re-opening graphic window after fork()
- re-opening window after fork re-open in GUI drawingarea when using GUI

v 4.6.2:

- changed besseljprimezeros200.h5 in besseljprimezeros200.fits to
  suppress hdf5 dependency
- fixed unknown dpi bug in create_yao_window()

v4.7.0:
Merged a bunch of changes from Marcos van Dam. From his changelog:
1. There is a new version of soy.i. I found more bugs and since it had to be modified, I added new functions. FR: I merged these changes in soy 1.3
2. filtertilt set to 0 for interaction matrix generation. I need this to generate sparse matrices.
3. filtertilt for zernike and stackarray DMs. I need to filter tilt from DMs when doing tomography with LGSs.
4. WFS measurements set to 0 if not from same subsystem as DM.
5. minimum zernike (to exclude piston/tip/tilt if desired). I need this feature for tip-tilt tomography.
6. I remove the reporting of the number of corrected modes... do we really need this? it makes no sense for anything other than classical AO.
7. pupil (real = 0). We discussed this earlier.
8. Introduced virtual DMs needed for tomographic reconstruction
9. mmse and mmse-sparse works fine with MCAO
10. Have loop.method set to closed-loop, open-loop and pseudo open-loop. Open loop means WFS sees uncorrected WF, not corrected WF.
11. Tomographic reconstruction!


version 4.7.1, 2010sep16:
- fixed nasty bug that was not switching noise off for background calib (SHWFS)
  Thanks Yann Clenet for noticing and pointing me to the right direction
- make screen now can drop the imaginary part (no_ipart=1) to produce larger
  screens by saving some RAM.
- Gotten rid of hdf5 call in yaodh (and thus of hdf5 dependency)
- switched the default mode in test-all.i to non svipc


version 4.7.2, 2010 oct12:
- added smooth animate=1 for iMat recording/display
- added ETA when taking iMat
- added option to findfwhm() to save RAM requirements (help,findfwhm)
- merged patch from Marcos van Dam:
  * implemented virtual DMs for tomography
  * implemented save of residual phase in go() (help,go)

version 4.7.3, 2010 oct12:
- merged SH threshold methods #2 and #3, patches from Yann Clenet
  Credits for original idea of method #3 (compute centroid on N
  brightest pixels instead of using a flux threshold) go to E.Gendron.
- added some safety for the choice of shthreshold when using shmethod=3
  to avoid getting segfaults in yao_fast.

version 4.8.0:

- XFT related:
  - increased size of axis labels fonts on plsys(4)
  
- newfits:
  - fixed error handling. Now error in place, instead of calling error handling
    function (exitInError). Allows much clearer debugging.
    
- Pyramid:
  - merged pyramid_wfs() changes from marcos, upgraded by francois
  - changes in yao main routines to make re-introduced obsolete "pyramid" wfs type 
  - upgraded GUI to include pyramid modulation amplitude control
  - added 4 new structure members to wfs structure

- MISC:
  - added "--dpi ##" command line call option (for GUI call). Example:
    yao --dpi 75 sh6x6.par
  - added default animate() to iMat acquisition display.
  - cleanup of yao.py (dictionary autoconnect) + dpi stuff
  - shortened get_style() calls to viewport() call
  - gotten rid of get_processor_number() (use nprocs() function in svipc)
  - added a bunch of extern wfs, dm, ... in functions called by python to set
    values of parameters (how could it have worked before is a mystery).
    
- BUG FIXES:
  - fixed a bug in which the graphic would get stuck (animate call was done
  without ensuring a plsys,1)
  

version 4.8.1:

  - changed layout of graphic window to add residual phase
  - display of residual phase (Marcos)
  - nintegcycle in pyramid wfs (Marcos)
  - "extended" object in pyramid wfs (Marcos)
  - a couple of bugfix (Marcos and I)
  
version 4.8.2:
  - Added parallelization of WFS (i.e. one thread/WFS in a multi WFS system)
  - Tried implementing FFTW parallelization, but the gains were really marginal
    and often it would be more detrimental than good. Reverted, but left the
    code commented in Makefile, yao_fast.i and yao_fast.c
  - yao now looks for and includes yao.conf, if any (before was only in yao GUI)
  - changed all calls to fitsRead and fitsWrite to new function names
    yao_fitsread and yao_fitswrite. This way, I work around any conflict
    with fits.i function checks. Renamed newfits.i to yao_newfits.i
  - fixed a number of bugs in svipc implementation (mostly how it recovers from
    a previous svipc run within the same session). test-all.i now runs good
    with sim.svipc = 1, 5, with wfs.svipc>1, as well as sim.svipc=1 *and* wfs.svipc>1
    within the same run.
  - added items in check_parameters() to check for the svipc bad settings
  - re-introduced sim.name in graphic and nudged some labels in graphics a bit
  - introduced some changes to make the graphic look better when using
    xftfonts. also resized controlscreen
  - better handling of window closing/opening when using svipc
  - push to get reference tip is now 0.005 instead of 0.05 (there's no noise)
  - fixed a bug that animate would not be ON for display in close loop when
    using svipc
  - switched the Makefile to -Wall
  - 2 new sim structure members: sim.svipc_wfs_nfork and sim.svipc_wfs_forknb
  - fixed a bug in pyramid wfs, hopefully once and for all (bad sinc() function
    used).
  - added test3.par (same as glao.par)
  - fix a bug in test5.par (phase screen referred in parfile may not have
    existed)
  - fixed issue with animate being ON and preventing further plot
  - fixed bug in which background calib was not passed to wfs.svipc child (since
    4.7.1)
  - fixed nitegcycle for shwfs when no svipc
  - written test routine (examples/test-fr.i) to check correctness of main
    modes of svipc (wfs and sim).
    
